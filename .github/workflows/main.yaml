# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js deploy

on:
  push: {}
  workflow_dispatch:

jobs:
  
  deployCloudfare:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.6.1]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    permissions:
      contents: read
      deployments: write
    name: Publish to Cloudflare Pages
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present

      - name: Publish to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3.10.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./build --project-name=maculaweb

      - name: Add Pull Request Comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## Deploy - Resultado
            La aplicación se ha desplegado correctamente en Cloudflare Pages.
            Puedes ver los detalles o acceder a la URL de deploy si está disponible.

      - name: Set Deploy Status
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Use github.rest.repos.createCommitStatus instead of github.repos
            const response = await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'success',
              context: 'Deploy',
              description: 'Deployment succeeded',
              target_url: 'https://premiosmacula.es' // Reemplaza con la URL de tu deploy, si aplicable.
            });
            console.log(`Created commit status #${response.data.id}`);
